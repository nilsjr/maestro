# File should be sorted by alphabet for each section

# How to sort with AS:
# "Select all in block" -> "Edit" -> "Sort lines"

[versions]
androidPlugin = "4.2.1"
androidToolsApkParser = "30.3.0"
androidToolsSdk = "30.3.0"
androidxAppcompat = "1.5.1"
androidxConstraintlayout = "2.1.4"
androidxCore = "1.9.0"
androidxEspresso = "3.4.0"
androidxTestJunit = "1.1.3"
androidxUiautomator = "2.2.0"
appdirs = "1.2.1"
axml = "2.1.2"
dadb = "1.2.6"
detekt = "1.19.0"
googleAndroidMaterial = "1.6.0"
googleFindbugs = "3.0.2"
googleGson = "2.9.0"
googleProtobuf = "3.21.9"
googleProtobufKotlinLite = "3.21.9"
googleProtobufPlugin = "0.9.1"
googleTruth = "1.1.3"
grpc = "1.50.2"
grpcKotlinStub = "1.3.0"
imageComparison = "4.4.0"
jackson = "2.13.4"
jansi = "2.4.0"
jarchivelib = "1.2.0"
junit = "5.9.0"
kotlin = "1.6.10"
kotlinResult = "1.1.14"
ktor = "2.2.2"
mozillaRhino = "1.7.14"
picocli = "4.5.2"
selenium = "4.7.2"
slf4j = "1.7.36"
slf4jNop = "2.0.1"
squareOkhttp = "4.10.0"
squareOkio = "3.2.0"
squareRetrofit = "2.9.0"
webdrivermanager = "5.3.1"
wiremock = "2.35.0"

[libraries]
android-tools-apkparser = { module = "com.android.tools.apkparser:apkanalyzer", version.ref = "androidToolsApkParser" }
android-tools-sdk = { module = "com.android.tools:sdk-common", version.ref = "androidToolsSdk" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidxAppcompat" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "androidxConstraintlayout" }
androidx-core = { module = "androidx.core:core-ktx", version.ref = "androidxCore" }
androidx-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "androidxEspresso" }
androidx-test-junit = { module = "androidx.test.ext:junit", version.ref = "androidxTestJunit" }
androidx-uiautomator = { module = "androidx.test.uiautomator:uiautomator", version.ref = "androidxUiautomator" }
appdirs = { module = "net.harawata:appdirs", version.ref = "appdirs" }
axml = { module = "de.upb.cs.swt:axml", version.ref = "axml" }
dadb = { module = "dev.mobile:dadb", version.ref = "dadb" }
detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
google-android-material = { module = "com.google.android.material:material", version.ref = "googleAndroidMaterial" }
google-findbugs = { module = "com.google.code.findbugs:jsr305", version.ref = "googleFindbugs" }
google-gson = { module = "com.google.code.gson:gson", version.ref = "googleGson" }
google-protobuf = { module = "com.google.protobuf:protoc", version.ref = "googleProtobuf" }
google-protobuf-kotlin = { module = "com.google.protobuf:protobuf-kotlin", version.ref = "googleProtobuf" }
google-protobuf-kotlin-lite = { module = "com.google.protobuf:protobuf-kotlin-lite", version.ref = "googleProtobuf" }
google-truth = { module = "com.google.truth:truth", version.ref = "googleTruth" }
grpc-kotlin-stub = { module = "io.grpc:grpc-kotlin-stub", version.ref = "grpcKotlinStub" }
grpc-netty = { module = "io.grpc:grpc-netty", version.ref = "grpc" }
grpc-netty-shaded = { module = "io.grpc:grpc-netty-shaded", version.ref = "grpc" }
grpc-okhttp = { module = "io.grpc:grpc-okhttp", version.ref = "grpc" }
grpc-protobuf = { module = "io.grpc:grpc-protobuf", version.ref = "grpc" }
grpc-protobuf-kotlin = { module = "io.grpc:grpc-protobuf-kotlin", version.ref = "grpc" }
grpc-protobuf-lite = { module = "io.grpc:grpc-protobuf-lite", version.ref = "grpc" }
grpc-protoc-gen-java = { module = "io.grpc:protoc-gen-grpc-java", version.ref = "grpc"}
grpc-stub = { module = "io.grpc:grpc-stub", version.ref = "grpc" }
image-comparison = { module = "com.github.romankh3:image-comparison", version.ref = "imageComparison" }
jackson-core-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jackson-dataformat-xml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-xml", version.ref = "jackson" }
jackson-dataformat-yaml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml", version.ref = "jackson" }
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }
jansi = { module = "org.fusesource.jansi:jansi", version.ref = "jansi" }
jarchivelib = { module = "org.rauschig:jarchivelib", version.ref = "jarchivelib" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
kotlin-result = { module = "com.michael-bull.kotlin-result:kotlin-result", version.ref = "kotlinResult" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-serial-gson = { module = "io.ktor:ktor-serialization-gson", version.ref = "ktor" }
ktor-server-cio = { module = "io.ktor:ktor-server-cio", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-status-pages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor" }
mozilla-rhino = { module = "org.mozilla:rhino", version.ref = "mozillaRhino" }
picocli = { module = "info.picocli:picocli", version.ref = "picocli" }
picocli-codegen = { module = "info.picocli:picocli-codegen", version.ref = "picocli" }
selenium = { module = "org.seleniumhq.selenium:selenium-java", version.ref = "selenium" }
slf4j = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
slf4j-nop = { module = "org.slf4j:slf4j-nop", version.ref = "slf4jNop" }
square-okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "squareOkhttp" }
square-okio = { module = "com.squareup.okio:okio", version.ref = "squareOkio" }
square-retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "squareRetrofit" }
square-retrofit-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "squareRetrofit" }
webdrivermanager = { module = "io.github.bonigarcia:webdrivermanager", version.ref = "webdrivermanager" }
wiremock-jre8 = { module = "com.github.tomakehurst:wiremock-jre8", version.ref = "wiremock" }

[bundles]

[plugins]
android-application = { id = "com.android.application", version.ref = "androidPlugin" }
android-library = { id = "com.android.library", version.ref = "androidPlugin" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
google-protobuf = { id = "com.google.protobuf", version.ref = "googleProtobufPlugin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
vanniktech-publish = { id = "com.vanniktech.maven.publish", version = "0.19.0" }